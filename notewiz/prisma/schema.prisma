generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("mongodb+srv://Juwairia:070898@cluster0.pghgbgz.mongodb.net/registered_users")
}

model User {
  id        String   @id @default(cuid()) @map("_id")
  name      String?
  email     String?  @unique
  emailVerified DateTime?
  image     String?
  games     Game[]
  accounts  Account[]
  sessions  Session[]
}

model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.String
  access_token       String? @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.String
  session_state      String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

enum QuestionType {
  mcq
  true_false
}

model Game {
  id          String     @id @default(cuid()) @map("_id")
  userId      String
  questions   Question[]
  timeStarted DateTime
  topic       String
  text        String
  timeEnded   DateTime?
  gameType    QuestionType
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Question {
  id              String    @id @default(cuid()) @map("_id")
  question        String
  answer          String
  gameId          String
  options         Json?     // for mcq questions
  isTrueOrFalse   Boolean?  // for true_false questions
  isCorrect       Boolean   // to check if user's answer is correct
  difficulty      LevelofDifficulty
  questionType    QuestionType
  userAnswer      String?
  game            Game      @relation(fields: [gameId], references: [id])

  @@index([gameId])
}